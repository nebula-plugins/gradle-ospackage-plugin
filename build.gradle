buildscript {
    repositories { jcenter() }
    dependencies { classpath 'com.netflix.nebula:nebula-plugin-plugin:2.0.+' }
}

description 'Provides a task similar to Tar and Zip for constructing RPM and DEB package files.'
apply plugin: 'nebula-plugin'
apply plugin: 'nebula-test-jar'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.6
targetCompatibility = 1.6

release {
    git.requireBranch = 'gradle-2.0'
}
createWrapper.gradleVersion='2.0'

dependencies {
    // Dynamic versions are ok, the nebula-maven-publishing plugin will take care of them
    compile 'org.apache.commons:commons-lang3:3.1'
    compile('org.redline-rpm:redline:1.2.1') {
        // Where logging foes is a runtime decision
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile('org.vafer:jdeb:1.4') {
        // Individual listing so that they translate into the pom file
        exclude group: 'org.apache.maven', module: 'maven-core'
        exclude group: 'org.apache.maven', module: 'maven-plugin-api'
        exclude group: 'org.apache.maven', module: 'maven-project'
        exclude group: 'org.apache.maven', module: 'maven-artifact'
        exclude group: 'org.codehaus.plexus', module: 'plexus-utils'
    }

    testCompile('com.netflix.nebula:nebula-test:2.0.+') {
        exclude group: 'org.codehaus.groovy'
    }
    compile 'com.bmuschko:gradle-docker-plugin:2.0.3'
}

def javaApiUrl = 'http://docs.oracle.com/javase/1.6.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'
tasks.withType(Javadoc) {
    options.links(javaApiUrl, groovyApiUrl)
}

contacts {
    'justin@halfempty.org' {
        moniker 'Justin Ryan'
        github 'quidryan'
    }
    'alan@trigonic.com' {
        moniker 'Alan Krueger'
        github 'AlanKrueger'
    }
}
