/*
 * Copyright 2014-2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
plugins {
    id 'nebula.plugin-plugin' version '12.2.0'
}

description 'Provides a task similar to Tar and Zip for constructing RPM and DEB package files.'

contacts {
    'justin@halfempty.org' {
        moniker 'Justin Ryan'
        github 'quidryan'
    }
    'alan@trigonic.com' {
        moniker 'Alan Krueger'
        github 'AlanKrueger'
    }
    'rob.spieldenner@gmail.com' {
        moniker 'Rob Spieldenner'
        github 'rspieldenner'
    }
    'roberto@perezalcolea.info' {
        moniker 'Roberto Perez Alcolea'
        github 'rpalcolea'
    }
}

dependencyLock {
    includeTransitives = true
}

configurations.all {
    resolutionStrategy {
        force 'org.bouncycastle:bcpg-jdk15on:1.50'
    }
}

dependencies {
    compile 'org.apache.commons:commons-lang3:3.1'
    compile('org.redline-rpm:redline:1.2.7') {
        // Where logging goes is a runtime decision
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile('org.vafer:jdeb:1.8') {
        // Individual listing so that they translate into the pom file
        exclude group: 'org.apache.maven', module: 'maven-core'
        exclude group: 'org.apache.maven', module: 'maven-plugin-api'
        exclude group: 'org.apache.maven', module: 'maven-project'
        exclude group: 'org.apache.maven', module: 'maven-artifact'
        exclude group: 'org.codehaus.plexus', module: 'plexus-utils'
    }

    compile 'com.bmuschko:gradle-docker-plugin:5.0.0'
}

def javaApiUrl = 'http://docs.oracle.com/javase/1.6.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
    options.links(javaApiUrl, groovyApiUrl)
}

test {
    maxHeapSize = '384m'
}

pluginBundle {
    plugins {
        ospackage {
            id = 'nebula.ospackage'
            displayName = 'Nebula OS Package'
            description = project.description
            tags = ['nebula', 'rpm', 'centos', 'deb', 'debian']
        }

        ospackageApplication {
            id = 'nebula.ospackage-application'
            displayName = 'Nebula OS Package Application Plugin'
            description = 'Packages output of application plugin into a debian or rpm'
            tags = ['nebula', 'os', 'package', 'rpm', 'deb', 'application']
        }

        ospackageApplicationDaemon {
            id = 'nebula.ospackage-application-daemon'
            displayName = 'Nebula OS Package Application Daemon Plugin'
            description = 'Creates daemontools setup to run output from application plugin'
            tags = ['nebula', 'os', 'package', 'rpm', 'deb', 'application', 'daemon']
        }

        ospackageApplicationSpring {
            id = 'nebula.ospackage-application-spring-boot'
            displayName = 'Nebula OS Package Spring Application Plugin'
            description = 'Packages output of application plugin into a debian or rpm'
            tags = ['nebula', 'os', 'package', 'rpm', 'deb', 'application', 'spring']
        }

        ospackageBase {
            id = 'nebula.ospackage-base'
            displayName = 'Nebula OS Package Base'
            description = 'Setup base publishing for OS packages'
            tags = ['nebula', 'rpm', 'centos', 'deb', 'debian']
        }

        ospackageDaemon {
            id = 'nebula.ospackage-daemon'
            displayName = 'Nebula OS Package Daemon Plugin'
            description = 'Create daemontools runner'
            tags = ['nebula', 'os', 'package', 'rpm', 'deb', 'daemon']
        }

        ospackageDocker {
            id = 'nebula.ospackage-docker'
            displayName = 'Nebula OS Package Docker'
            description = 'Create docker images from ospackage block'
            tags = ['nebula', 'docker']
        }

        ospackageDockerBase {
            id = 'nebula.ospackage-docker-base'
            displayName = 'Nebula OS Package Docker Base'
            description = 'Setup base publishing for docker images'
            tags = ['nebula', 'docker']
        }

        deb {
            id = 'nebula.deb'
            displayName = 'Nebula Debian Packaging Plugin'
            description = 'Create debian system packages'
            tags = ['nebula', 'deb', 'debian']
        }

        rpm {
            id = 'nebula.rpm'
            displayName = 'Nebula RPM Packaging Plugin'
            description = 'Create RPM system packages'
            tags = ['nebula', 'rpm', 'centos']
        }
    }
}
